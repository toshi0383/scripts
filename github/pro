#!/bin/bash
set -eo pipefail

TOKEN=${GITHUB_ACCESS_TOKEN:?"GitHub Personal Access Token is required."}
BASE_NAME=$(basename $0)
USAGE=$(cat <<EOF
Usage:
${BASE_NAME} <base> [<milestone>] [<label>] [<assignee>]
EOF
)
BASE_BRANCH=${1:?${USAGE}}
MILESTONE=${2}
LABEL=${3}
ASSIGNEE=${4}
USER_REPO=$(git remote -v | head -1 | sed -n 's/.*:\(.*\)\.git.*/\1/p')
HEAD_BRANCH=$(git branch | grep \* | cut -d ' ' -f2)
echo Pushing current branch..
git push origin $(git rev-parse --abbrev-ref HEAD)
echo -n Enter Title:
read line
TITLE=$line
echo Enter PR Body:
while read line
do
    MESSAGE="${line}\n${MESSAGE}"
done
echo Creating a new pull-request..
DATA=$(cat <<EOF
{
    "title": "${TITLE}",
    "body": "${MESSAGE}",
    "head": "${HEAD_BRANCH}",
    "base": "${BASE_BRANCH}"
}
EOF
)
# echo "${DATA}"
NUMBER=$(curl -sS -H "Authorization: token ${TOKEN}"\
    https://api.github.com/repos/${USER_REPO}/pulls \
    -d "${DATA}" | jq .number)
# echo $NUMBER
if [ $MILESTONE ];then
    MILESTONE=$(curl -sS -H "Authorization: token ${TOKEN}"\
        https://api.github.com/repos/${USER_REPO}/milestones \
        | jq 'map(.number,.title)' | grep ${MILESTONE} -B1 | head -1 | sed -n 's/.*\([1-9]\)./\1/p')
fi
# echo $MILESTONE
DATA=$(cat <<EOF
{ 
    "milestone": "${MILESTONE}",
    "labels": ["${LABEL}"],
    "assignees": ["${ASSIGNEE}"]
}
EOF
)
# echo "${DATA}"
curl -sSX PATCH -H "Authorization: token ${TOKEN}"\
    https://api.github.com/repos/${USER_REPO}/issues/${NUMBER} \
    -d "${DATA}"
